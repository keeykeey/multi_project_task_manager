version: "3.7"

services:
  db:
    container_name: db_container
    image: postgres:13.1-alpine
    volumes:
      - ./app/database:/var/lib/postgresql/data
      - ./app/initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  backend:
    container_name: backend_container
    build:
      context: .
      dockerfile: DockerfileBackend
      target: dev
    tty: true
    volumes:
      - ./app/backend/volume/:/go/volume/
      - ./app/backend/src/mylib/:/go/src/mylib/
    ports:
      - "8080:8080"
    depends_on:
      - db

  frontend:
    container_name: frontend_container
    tty: true
    build:
      context: .
      dockerfile: DockerfileFrontend
    volumes:
      - ./app/frontend:/dockerFrontend
      - build_folder:/dockerFrontend/build
    ports:
      - "3000:3000"

  nginx:
    container_name: nginx_container
    build:
      context: .
      dockerfile: DockerfileNginx
    volumes:
      - build_folder:/var/www/
    ports:
      - "80:80"
    depends_on:
      - frontend

volumes:
  build_folder:
